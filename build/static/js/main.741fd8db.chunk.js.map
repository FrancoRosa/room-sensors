{"version":3,"sources":["js/api.js","components/AddRoom.jsx","components/AddSensor.jsx","js/helpers.js","components/Clock.jsx","components/Navigator.jsx","components/Rooms.jsx","components/Room.jsx","components/Sensor.jsx","js/model.js","components/App.jsx","index.js"],"names":["host","socket","io","connect","getRooms","a","console","log","url","axios","get","response","data","createRoom","room","post","deleteRoom","room_id","delete","updateRoom","obj","put","getSensors","createSensor","sensor","deleteSensor","sensor_id","getMeasurements","getMeasurementsQuery","AddRoom","history","useHistory","useState","name","setName","description","setDescription","id","setId","addRoom","useStoreActions","actions","className","value","onChange","e","target","type","placeholder","min","step","onClick","sensors","then","res","message","push","AddSensor","variable","setVariable","unit","setUnit","useParams","rooms","useStoreState","state","newSensor","currentSensors","filter","updateRoomDB","toTime","timestamp","Date","toLocaleString","split","Clock","time","setTime","useEffect","setInterval","disabled","Navigator","selectedRoom","setSelectedRoom","selectedSensor","setSelectedSensor","setRooms","setMessage","on","msg","JSON","parse","off","to","map","icon","faPlus","Rooms","class","updated_at","Room","removeRoom","action","setSensors","length","tempSensors","s","last_measurement","window","confirm","faTrash","Sensor","realtime","setRealtime","now","queryDate","setQueryDate","labels","setLabels","setData","removeSensor","measurements","setMeasurements","addMeasurement","shiftMeasurement","measurement","datasets","label","fill","borderColor","tension","initialData","options","animation","duration","plugins","legend","display","faCog","spin","date","shift","store","createStore","model","App","exact","from","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.741fd8db.chunk.js","sourcesContent":["import axios from \"axios\";\nimport io from \"socket.io-client\";\n\n// const host='raspberrypi.local:9999'\nconst host = \"localhost:9999\";\n\nexport const socket = io.connect(`http://${host}`);\n\nexport const getRooms = async () => {\n  console.log(\"... getting rooms\");\n  const url = `http://${host}/api/rooms`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const createRoom = async (room) => {\n  console.log(\"... creating room\");\n  const url = `http://${host}/api/rooms`;\n  const response = await axios.post(url, room);\n  return response.data;\n};\n\nexport const deleteRoom = async (room_id) => {\n  console.log(\"... deleting room\");\n  const url = `http://${host}/api/rooms/${room_id}`;\n  const response = await axios.delete(url);\n  return response.data;\n};\n\nexport const updateRoom = async (room_id, obj) => {\n  console.log(\"... updating room\");\n  const url = `http://${host}/api/rooms/${room_id}`;\n  const response = await axios.put(url, obj);\n  return response.data;\n};\n\nexport const getSensors = async (room_id) => {\n  console.log(\"... getting sensors\");\n  const url = `http://${host}/api/rooms/${room_id}/sensors`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const createSensor = async (room_id, sensor) => {\n  console.log(\"... creating room\");\n  const url = `http://${host}/api/rooms/${room_id}/sensors`;\n  const response = await axios.post(url, sensor);\n  return response.data;\n};\n\nexport const deleteSensor = async (room_id, sensor_id) => {\n  console.log(\"... deleting sensor\");\n  const url = `http://${host}/api/rooms/${room_id}/sensors/${sensor_id}`;\n  const response = await axios.delete(url);\n  return response.data;\n};\n\nexport const getMeasurements = async (room_id, sensor_id) => {\n  console.log(\"... getting sensor values\");\n  const url = `http://${host}/api/rooms/${room_id}/sensors/${sensor_id}/measurements`;\n  const response = await axios.get(url);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMeasurementsQuery = async (room_id, sensor_id, data) => {\n  console.log(\"... getting sensor values query\");\n  const url = `http://${host}/api/rooms/${room_id}/sensors/${sensor_id}/measurements/query`;\n  const response = await axios.post(url, data);\n  return response.data;\n};\n","import { useStoreActions } from \"easy-peasy\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { createRoom } from \"../js/api\"\n\nconst AddRoom = () => {\n  const history = useHistory()\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [id, setId] = useState('')\n  const addRoom = useStoreActions(actions => actions.addRoom)\n\n  const handleSave = () => {\n    const sensors = 0\n    createRoom({name, description, id, sensors})\n      .then(res => {if(res.message) {\n        addRoom({name, description, id, sensors})\n        history.push('/')\n    }} )\n  }\n\n  return (\n    <div className=\"column\">\n      <div className=\"card m-4 p-4\">\n        <div className=\"title is-3\">Add room</div>\n        <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <p className=\"control\">\n            <input \n              value={name} onChange={e => setName(e.target.value)}\n              className=\"input\" type=\"text\" placeholder=\"Room name\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <p className=\"control\">\n            <textarea \n              value={description} onChange={e => setDescription(e.target.value)}\n              className=\"textarea\" type=\"text\" placeholder=\"Room description\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Id</label>\n          <p className=\"control\">\n            <input \n              value={id} onChange={e => setId(e.target.value)}\n              className=\"input\" type=\"number\" min='1' step=\"1\" placeholder=\"Unique id\" />\n          </p>\n        </div>\n        <div className=\"field mt-4\">\n          <div className=\"control\">\n            <button className=\"button is-primary\" onClick={handleSave}>\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddRoom","import { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { createSensor, updateRoom as updateRoomDB } from \"../js/api\";\n\nconst AddSensor = () => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [variable, setVariable] = useState('');\n  const [unit, setUnit] = useState('');\n  const [id, setId] = useState('');\n\n  const { room_id } = useParams();\n  const history = useHistory()\n\n  const rooms = useStoreState(state => state.rooms)\n  const updateRoom = useStoreActions(actions => actions.updateRoom)\n\n  const handleSaveSensor = () => {\n    const newSensor = {name, description, variable, unit, id}\n\n    const currentSensors = rooms.filter(room => room.id == room_id)[0].sensors\n    createSensor(room_id, newSensor).then(res => console.log('sensor created'))\n    updateRoomDB(room_id, {sensors: currentSensors+1})\n      .then(res => {\n        updateRoom(room_id, {sensors: currentSensors+1})\n        history.push(`/room/${room_id}`)\n      })\n  }\n  \n  return (\n    <div className=\"column\">\n      <div className=\"card m-4 p-4\">\n        <div className=\"title is-3\">Add Sensor</div>\n        <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setName(e.target.value)} value={name}\n              className=\"input\" type=\"text\" placeholder=\"Sensor name\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <p className=\"control\">\n            <textarea \n              onChange={e => setDescription(e.target.value)} value={description}\n              className=\"textarea\" type=\"text\" placeholder=\"Sensor description\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Variable</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setVariable(e.target.value)} value={variable}\n              className=\"input\" type=\"text\" placeholder=\"Ex: Temperature\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Unit</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setUnit(e.target.value)} value={unit}\n              className=\"input\" type=\"text\" placeholder=\"Ex: ॰C\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Id</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setId(e.target.value)} value={id}\n              className=\"input\" type=\"number\" min='1' step=\"1\" placeholder=\"Unique id\" />\n          </p>\n        </div>\n        <div className=\"field mt-4\">\n          <div className=\"control\">\n            <button className=\"button is-primary\" onClick={handleSaveSensor}>\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddSensor","export const toDateTime = timestamp => {\n  const time = new Date(timestamp)\n  return time.toLocaleString('sv-SE')\n}\n\nexport const toDate = timestamp => {\n  const time = new Date(timestamp)\n  return time.toLocaleString('sv-SE').split(' ')[0]\n}\n\nexport const toTime = timestamp => {\n  const time = new Date(timestamp)\n  return time.toLocaleString('sv-SE').split(' ')[1]\n}\n\nexport const timeFromNow = time => {\n\tlet unixTime = new Date(time).getTime();\n\tif (!unixTime) return;\n\tlet now = new Date().getTime();\n\tlet difference = (unixTime / 1000) - (now / 1000);\n\tlet tfn = {};\n\n  tfn.when = 'now';\n\tif (difference > 0) {\n\t\ttfn.when = 'future';\n\t} else if (difference < -1) {\n\t\ttfn.when = 'past';\n\t}\n\n\tdifference = Math.abs(difference);\n\n\tif (difference / (60 * 60 * 24 * 365) > 1) {\n\t\ttfn.unitOfTime = 'years';\n\t\ttfn.time = Math.floor(difference / (60 * 60 * 24 * 365));\n\t} else if (difference / (60 * 60 * 24 * 45) > 1) {\n\t\ttfn.unitOfTime = 'months';\n\t\ttfn.time = Math.floor(difference / (60 * 60 * 24 * 45));\n\t} else if (difference / (60 * 60 * 24) > 1) {\n\t\ttfn.unitOfTime = 'days';\n\t\ttfn.time = Math.floor(difference / (60 * 60 * 24));\n\t} else if (difference / (60 * 60) > 1) {\n\t\ttfn.unitOfTime = 'hours';\n\t\ttfn.time = Math.floor(difference / (60 * 60));\n\t} else {\n\t\ttfn.unitOfTime = 'seconds';\n\t\ttfn.time = Math.floor(difference);\n\t}\n\n\treturn `${tfn.time} ${tfn.unitOfTime} ${tfn.when == 'past' ?  'ago' : 'ahead'}` ;\n}","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { toTime } from \"../js/helpers\";\n\nconst Clock = () => {\n  const [time, setTime] = useState(Date());\n\n  useEffect(() => {\n    setInterval(() => {\n      setTime(Date());\n    }, 1000);\n  }, []);\n\n  return (\n    <p\n      disabled\n      className=\"button is-outlined is-white clock heading has-text-white is-size-4\"\n    >\n      {toTime(time)}\n    </p>\n  );\n};\nexport default Clock;\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getRooms, socket } from \"../js/api\";\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\nimport Clock from \"./Clock\";\n\nconst Navigator = () => {\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const rooms = useStoreState((state) => state.rooms);\n  const sensors = useStoreState((state) => state.sensors);\n  const message = useStoreState((state) => state.message);\n  const setRooms = useStoreActions((actions) => actions.setRooms);\n  const setMessage = useStoreActions((actions) => actions.setMessage);\n\n  useEffect(() => {\n    getRooms().then((res) => setRooms(res.rooms));\n    socket.on(\"message\", (msg) => {\n      setMessage(JSON.parse(msg));\n      console.log(JSON.parse(msg));\n    });\n    return () => {\n      socket.off(\"message\");\n    };\n  }, []);\n\n  return (\n    <aside className=\"menu column is-one-fifth p-4 is-size-5\">\n      <p className=\"menu-label has-text-link ml-2\">\n        <Link\n          to=\"/rooms\"\n          onClick={() => {\n            setSelectedRoom(null);\n            setSelectedSensor(null);\n          }}\n        >\n          Rooms\n        </Link>\n      </p>\n      <ul className=\"menu-list p-0 m-0\">\n        {rooms.map((room) => (\n          <li>\n            <Link\n              to={`/room/${room.id}`}\n              onClick={() => {\n                setSelectedSensor(null);\n                if (selectedRoom == room.id) {\n                  setSelectedRoom(null);\n                } else {\n                  setSelectedRoom(room.id);\n                }\n              }}\n              className={room.id == selectedRoom ? \"is-active\" : \"\"}\n            >\n              {room.name}\n            </Link>\n            {room.id == selectedRoom ? (\n              <ul className=\"p-0 m-0\">\n                {sensors.map((sensor) => (\n                  <li className=\"p-0 m-0\">\n                    <Link\n                      to={`/room/${room.id}/sensor/${sensor.id}`}\n                      onClick={() => setSelectedSensor(sensor.id)}\n                      className={\n                        sensor.id == selectedSensor\n                          ? \"p-0 m-0 is-active\"\n                          : \"p-0 m-0\"\n                      }\n                    >\n                      {sensor.name}\n                    </Link>\n                  </li>\n                ))}\n                <li>\n                  <Link\n                    onClick={() => setSelectedSensor(null)}\n                    to={`/add_sensor/${room.id}`}\n                  >\n                    <span className=\"has-text-link\">\n                      <FontAwesomeIcon icon={faPlus} />\n                    </span>\n                    <span className=\"ml-2 is-size-6\">Add sensor</span>\n                  </Link>\n                </li>\n              </ul>\n            ) : (\n              \"\"\n            )}\n          </li>\n        ))}\n        <li>\n          <Link to=\"/add_room\" onClick={() => setSelectedRoom(null)}>\n            <span className=\"has-text-link\">\n              <FontAwesomeIcon icon={faPlus} />\n            </span>\n            <span className=\"ml-2\">Add room</span>\n          </Link>\n        </li>\n      </ul>\n    </aside>\n  );\n};\n\nexport default Navigator;\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useStoreState } from \"easy-peasy\"\nimport { Link } from \"react-router-dom\"\nimport { toDateTime } from \"../js/helpers\"\nconst Rooms = () => {\n  const rooms = useStoreState(state => state.rooms)\n\n  return (\n    <div className=\"column\">\n      <h1 className=\"title is-3 m-4\">Rooms</h1>\n      <div class=\"is-flex is-flex-wrap-wrap\">\n        {rooms.map(room => (\n          <div className=\"card m-4\">\n            <Link to={`/room/${room.id}`}>\n              <div className=\"card-content\">\n                <p className=\"title is-3\">{room.name} <span className='subtitle is-4'>({room.id})</span></p>\n                <p className=\"subtitle is-5\">{room.description}</p>\n                <p>Sensors connected: {room.sensors}</p>\n                <p>Last update: {toDateTime(room.updated_at)}</p>\n              </div>\n            </Link>\n          </div>\n        ))}\n        <div className=\"card m-4\">\n          <Link to='/add_room'>\n            <div className=\"card-content\">\n              <p className=\"title is-3\">Add room</p>\n              <p className=\"subtitle is-1 has-text-success\">\n                <FontAwesomeIcon icon={faPlus} />\n              </p>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Rooms","import { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteRoom, getSensors } from \"../js/api\";\nimport { timeFromNow, toDateTime, toTime } from \"../js/helpers\";\n\nconst Room = () => {\n  const { room_id } = useParams();\n  const history = useHistory();\n  const removeRoom = useStoreActions((action) => action.removeRoom);\n  const setSensors = useStoreActions((action) => action.setSensors);\n\n  const rooms = useStoreState((state) => state.rooms);\n  const sensors = useStoreState((state) => state.sensors);\n  const message = useStoreState((state) => state.message);\n  const room = rooms.filter((room) => room.id == room_id)[0];\n\n  const handleRoomDelete = () => {\n    if (window.confirm(\"Delete room and all data?\")) {\n      deleteRoom(room_id).then((res) => {\n        if (res.message) {\n          history.push(\"/\");\n          removeRoom(room_id);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    getSensors(room_id).then((res) => setSensors(res.sensors));\n  }, [room_id]);\n\n  useEffect(() => {\n    if (rooms.length == 0) history.push(\"/\");\n  }, []);\n\n  useEffect(() => {\n    if (message.room_id == room_id) {\n      let tempSensors = sensors.map((s) =>\n        s.id == message.sensor_id\n          ? {\n              ...s,\n              last_measurement: message.value,\n              updated_at: message.updated_at,\n            }\n          : s\n      );\n      setSensors(tempSensors);\n    }\n  }, [message]);\n\n  return (\n    <div className=\"column m-0 p-0\">\n      {rooms.length != 0 ? (\n        <>\n          <div className=\"\">\n            <p className=\"title is-3 mt-4 mt-0 ml-2 p-0\">\n              {room.name}{\" \"}\n              <span className=\"is-size-6 has-text-grey\">({room.id})</span>\n              <FontAwesomeIcon\n                onClick={handleRoomDelete}\n                className=\"ml-4 has-text-link is-size-6\"\n                icon={faTrash}\n              />\n            </p>\n          </div>\n          <div class=\"is-flex is-flex-wrap-wrap\">\n            {sensors.map((sensor) => (\n              <div className=\"card m-1\">\n                <Link to={`/room/${room_id}/sensor/${sensor.id}`}>\n                  <div className=\"card-content\">\n                    <p className=\"title is-3\">\n                      {sensor.name}{\" \"}\n                      <span className=\"is-size-6 has-text-grey\">\n                        ({sensor.id})\n                      </span>\n                    </p>\n                    <p className=\"subtitle is-6 m-0\">{sensor.variable}</p>\n                    <p className=\"m-0\">\n                      <span className=\"is-size-2\">\n                        {sensor.last_measurement}{\" \"}\n                      </span>\n                      <span className=\"is-size-4\">{sensor.unit} </span>\n                    </p>\n                  </div>\n                </Link>\n              </div>\n            ))}\n            <div className=\"card m-1\">\n              <Link to={`/add_sensor/${room_id}`}>\n                <div className=\"card-content\">\n                  <p className=\"title is-3\">Add sensor</p>\n                  <p className=\"subtitle is-1 has-text-success\">\n                    <FontAwesomeIcon icon={faPlus} />\n                  </p>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Room;\n","import { faCog, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { deleteSensor, getMeasurements, getMeasurementsQuery } from \"../js/api\";\nimport { timeFromNow, toDate, toDateTime, toTime } from \"../js/helpers\";\n\nconst Sensor = () => {\n  const [realtime, setRealtime] = useState(true);\n  const [queryDate, setQueryDate] = useState(toDate(Date.now()));\n  const [labels, setLabels] = useState([]);\n  const [data, setData] = useState([]);\n  const { sensor_id, room_id } = useParams();\n  const sensors = useStoreState((state) => state.sensors);\n  const message = useStoreState((state) => state.message);\n  const removeSensor = useStoreActions((actions) => actions.removeSensor);\n  const sensor = sensors.filter((sensor) => sensor.id == sensor_id)[0];\n  const measurements = useStoreState((state) => state.measurements);\n  const setMeasurements = useStoreActions((actions) => actions.setMeasurements);\n  const addMeasurement = useStoreActions((actions) => actions.addMeasurement);\n  const shiftMeasurement = useStoreActions(\n    (actions) => actions.shiftMeasurement\n  );\n  const history = useHistory();\n\n  const initialData = (labels, data) => ({\n    labels,\n    datasets: [\n      {\n        label: \"Temperature ॰C\",\n        data,\n        fill: false,\n        borderColor: \"#2ecc71\",\n        tension: 0.1,\n      },\n    ],\n  });\n\n  const options = {\n    animation: {\n      duration: 0,\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  useEffect(() => {\n    if (sensors.length == 0) history.push(\"/\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"...measurements\");\n    getMeasurements(room_id, sensor_id).then((res) => {\n      console.log(res.measurements);\n      setMeasurements(res.measurements);\n    });\n  }, [sensor_id]);\n\n  useEffect(() => {\n    if (\n      realtime &&\n      message.room_id == room_id &&\n      message.sensor_id == sensor_id\n    ) {\n      if (measurements.length > 300) shiftMeasurement();\n      addMeasurement({\n        ...message,\n        id: Date.now(),\n        updated_at: Date(message.updated_at),\n      });\n    }\n  }, [message]);\n\n  useEffect(() => {\n    setLabels(\n      measurements.map((measurement) => toTime(measurement.updated_at))\n    );\n    setData(measurements.map((measurement) => measurement.value));\n  }, [measurements]);\n\n  const handleSensorDelete = () => {\n    if (window.confirm(\"Delete sensor and all data?\")) {\n      deleteSensor(room_id, sensor_id).then((res) => {\n        if (res.message) {\n          history.push(`/room/${room_id}`);\n          removeSensor(sensor_id);\n        }\n      });\n    }\n  };\n\n  const handleQuery = () => {\n    setRealtime(false);\n    getMeasurementsQuery(room_id, sensor_id, { date: queryDate }).then(\n      (res) => {\n        console.log(res.measurements);\n        setMeasurements(res.measurements);\n      }\n    );\n  };\n\n  return (\n    <div className=\"column pt-4\">\n      {sensors.length != 0 ? (\n        <>\n          <div className=\"is-flex is-justify-content-space-between\">\n            <p>\n              <span className=\"title is-3\">{sensor.name}: </span>\n              <span className=\"is-size-3 has-text-success \">\n                {sensor.last_measurement}\n              </span>\n              <span className=\"is-size-4 has-text-success \">\n                {\" \"}\n                {sensor.unit}\n              </span>\n            </p>\n            <p\n              onClick={handleSensorDelete}\n              className=\"has-text-danger title is-5\"\n            >\n              <FontAwesomeIcon icon={faTrash} className=\"mt-4 mr-4\" />\n            </p>\n          </div>\n          <div className=\"card\">\n            <Line data={() => initialData(labels, data)} options={options} />\n          </div>\n          <div className=\"is-flex is-justify-content-space-between p-3\">\n            <button\n              onClick={() => setRealtime(true)}\n              className={`is-medium button is-outlined ${\n                realtime && \"is-success\"\n              }`}\n            >\n              <FontAwesomeIcon icon={faCog} spin={realtime} className=\"mr-2\" />\n              Realtime\n            </button>\n            <div className=\"is-flex\">\n              <label class=\"label is-medium mr-2\">Date:</label>\n              <input\n                onChange={(e) => setQueryDate(e.target.value)}\n                value={queryDate}\n                type=\"date\"\n                className={`is-medium input mr-3 ${!realtime && \"is-success\"}`}\n              />\n              <button\n                onClick={handleQuery}\n                className={`is-medium button is-outlined ${\n                  !realtime && \"is-success\"\n                }`}\n              >\n                Query\n              </button>\n            </div>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Sensor;\n","import { action } from 'easy-peasy'\n\nexport default {\n  rooms: [],\n  setRooms: action((state, rooms) => {state.rooms = [...rooms]}),\n  addRoom: action((state, room) => {state.rooms.push(room)}),\n  removeRoom: action((state, id) => {state.rooms = state.rooms.filter(room => room.id != id)}),\n  updateRoom: action((state, id, obj) => {\n    state.rooms = state.rooms.map(room => room.id == id ? {...room, ...obj} : room)\n  }),\n\n  sensors: [],\n  setSensors: action((state, sensors) => {state.sensors = [...sensors]}),\n  removeSensor: action((state, id) => {state.sensors = state.sensors.filter(sensor => sensor.id != id)}),\n  \n  measurements: [],\n  setMeasurements: action((state, measurements) => {state.measurements = [...measurements]}),\n  addMeasurement: action((state, measurement) => {state.measurements.push(measurement)}),\n  shiftMeasurement: action((state) => {state.measurements.shift()}),\n\n  message: {},\n  setMessage: action((state, message) => {state.message = message})\n}","import { Switch, Redirect, Route, Router } from \"react-router-dom\";\nimport { StoreProvider, createStore } from \"easy-peasy\";\nimport AddRoom from \"./AddRoom\";\nimport AddSensor from \"./AddSensor\";\nimport Navigator from \"./Navigator\";\nimport Rooms from \"./Rooms\";\nimport Room from \"./Room\";\nimport Sensor from \"./Sensor\";\nimport model from \"../js/model\";\nimport Clock from \"./Clock\";\n\nconst store = createStore(model);\n\nconst App = () => {\n  return (\n    <div className=\"container is-widescreen\">\n      <div className=\"columns\">\n        <StoreProvider store={store}>\n          <Clock />\n          <Navigator />\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/rooms\" />\n            <Route path=\"/rooms\" component={Rooms} />\n            <Route path=\"/room/:room_id/sensor/:sensor_id\" component={Sensor} />\n            <Route path=\"/room/:room_id\" component={Room} />\n            <Route path=\"/add_room\" component={AddRoom} />\n            <Route path=\"/add_sensor/:room_id\" component={AddSensor} />\n          </Switch>\n        </StoreProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './css/index.css';\nimport './css/style.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}