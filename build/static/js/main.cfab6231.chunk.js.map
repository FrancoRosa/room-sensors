{"version":3,"sources":["js/api.js","components/AddRoom.jsx","components/AddSensor.jsx","components/Navigator.jsx","components/Rooms.jsx","components/Room.jsx","js/helpers.js","components/Sensor.jsx","js/model.js","components/App.jsx","index.js"],"names":["host","getRooms","a","console","log","url","axios","get","response","data","createRoom","room","post","deleteRoom","room_id","delete","updateRoom","obj","put","getSensors","createSensor","sensor","deleteSensor","sensor_id","getMeasurements","AddRoom","history","useHistory","useState","name","setName","description","setDescription","id","setId","addRoom","useStoreActions","actions","className","value","onChange","e","target","type","placeholder","min","step","onClick","sensors","then","res","message","push","AddSensor","variable","setVariable","unit","setUnit","useParams","rooms","useStoreState","state","newSensor","currentSensors","filter","updateRoomDB","Navigator","selectedRoom","setSelectedRoom","selectedSensor","setSelectedSensor","setRooms","useEffect","to","map","icon","faPlus","Rooms","class","last_update","Room","removeRoom","action","setSensors","faTrash","timeFromNow","time","unixTime","Date","getTime","difference","tfn","when","Math","abs","unitOfTime","floor","Sensor","realtime","setRealtime","removeSensor","measurements","setMeasurements","labels","measurement","timestamp","updated_at","toLocaleString","split","datasets","label","fill","borderColor","tension","initialData","options","animation","duration","store","createStore","model","App","exact","from","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfab6231.chunk.js","sourcesContent":["import axios from 'axios';\n// import io from \"socket.io-client\";\n\n// const host='raspberrypi.local:9999'\n// const host='10.84.9.68:9999'\nconst host='localhost:9999'\n// export const socket = io.connect(`http://${host}`);\n\nexport const getRooms = async () => {\n  console.log('... getting rooms');\n  const url = `http://${host}/api/rooms`;\n  const response = await axios.get(url)\n  return response.data\n}\n\nexport const createRoom = async room => {\n  console.log('... creating room');\n  const url = `http://${host}/api/rooms`;\n  const response = await axios.post(url, room)\n  return response.data\n}\n\nexport const deleteRoom = async room_id => {\n  console.log('... deleting room');\n  const url = `http://${host}/api/rooms/${room_id}`;\n  const response = await axios.delete(url)\n  return response.data\n}\n\nexport const updateRoom = async (room_id, obj) => {\n  console.log('... updating room');\n  const url = `http://${host}/api/rooms/${room_id}`;\n  const response = await axios.put(url, obj)\n  return response.data\n}\n\nexport const getSensors = async (room_id) => {\n  console.log('... getting sensors');\n  const url = `http://${host}/api/rooms/${room_id}/sensors`;\n  const response = await axios.get(url)\n  return response.data\n}\n\nexport const createSensor = async (room_id, sensor) => {\n  console.log('... creating room');\n  const url = `http://${host}/api/rooms/${room_id}/sensors`;\n  const response = await axios.post(url, sensor)\n  return response.data\n}\n\nexport const deleteSensor = async (room_id, sensor_id) => {\n  console.log('... deleting sensor');\n  const url = `http://${host}/api/rooms/${room_id}/sensors/${sensor_id}`;\n  const response = await axios.delete(url)\n  return response.data\n}\n\nexport const getMeasurements = async (room_id, sensor_id) => {\n  console.log('... getting sensor values');\n  const url = `http://${host}/api/rooms/${room_id}/sensors/${sensor_id}/measurements`;\n  const response = await axios.get(url)\n  return response.data\n}","import { useStoreActions } from \"easy-peasy\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { createRoom } from \"../js/api\"\n\nconst AddRoom = () => {\n  const history = useHistory()\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [id, setId] = useState('')\n  const addRoom = useStoreActions(actions => actions.addRoom)\n\n  const handleSave = () => {\n    const sensors = 0\n    createRoom({name, description, id, sensors})\n      .then(res => {if(res.message) {\n        addRoom({name, description, id, sensors})\n        history.push('/')\n    }} )\n  }\n\n  return (\n    <div className=\"column\">\n      <div className=\"card m-4 p-4\">\n        <div className=\"title is-3\">Add room</div>\n        <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <p className=\"control\">\n            <input \n              value={name} onChange={e => setName(e.target.value)}\n              className=\"input\" type=\"text\" placeholder=\"Room name\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <p className=\"control\">\n            <textarea \n              value={description} onChange={e => setDescription(e.target.value)}\n              className=\"textarea\" type=\"text\" placeholder=\"Room description\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Id</label>\n          <p className=\"control\">\n            <input \n              value={id} onChange={e => setId(e.target.value)}\n              className=\"input\" type=\"number\" min='1' step=\"1\" placeholder=\"Unique id\" />\n          </p>\n        </div>\n        <div className=\"field mt-4\">\n          <div className=\"control\">\n            <button className=\"button is-primary\" onClick={handleSave}>\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddRoom","import { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { createSensor, updateRoom as updateRoomDB } from \"../js/api\";\n\nconst AddSensor = () => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [variable, setVariable] = useState('');\n  const [unit, setUnit] = useState('');\n  const [id, setId] = useState('');\n\n  const { room_id } = useParams();\n  const history = useHistory()\n\n  const rooms = useStoreState(state => state.rooms)\n  const updateRoom = useStoreActions(actions => actions.updateRoom)\n\n  const handleSaveSensor = () => {\n    const newSensor = {name, description, variable, unit, id}\n\n    const currentSensors = rooms.filter(room => room.id == room_id)[0].sensors\n    createSensor(room_id, newSensor).then(res => console.log('sensor created'))\n    updateRoomDB(room_id, {sensors: currentSensors+1})\n      .then(res => {\n        updateRoom(room_id, {sensors: currentSensors+1})\n        history.push(`/room/${room_id}`)\n      })\n  }\n  \n  return (\n    <div className=\"column\">\n      <div className=\"card m-4 p-4\">\n        <div className=\"title is-3\">Add Sensor</div>\n        <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setName(e.target.value)} value={name}\n              className=\"input\" type=\"text\" placeholder=\"Sensor name\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <p className=\"control\">\n            <textarea \n              onChange={e => setDescription(e.target.value)} value={description}\n              className=\"textarea\" type=\"text\" placeholder=\"Sensor description\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Variable</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setVariable(e.target.value)} value={variable}\n              className=\"input\" type=\"text\" placeholder=\"Ex: Temperature\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Unit</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setUnit(e.target.value)} value={unit}\n              className=\"input\" type=\"text\" placeholder=\"Ex: ॰C\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Id</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setId(e.target.value)} value={id}\n              className=\"input\" type=\"number\" min='1' step=\"1\" placeholder=\"Unique id\" />\n          </p>\n        </div>\n        <div className=\"field mt-4\">\n          <div className=\"control\">\n            <button className=\"button is-primary\" onClick={handleSaveSensor}>\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddSensor","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getRooms } from '../js/api';\nimport { useStoreState, useStoreActions } from 'easy-peasy';\n\nconst Navigator = () => {\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const rooms = useStoreState(state => state.rooms)\n  const sensors = useStoreState(state => state.sensors)\n  const setRooms = useStoreActions(actions => actions.setRooms)\n  \n  useEffect(() => {\n    getRooms().then(res => setRooms(res.rooms))\n  },[])\n\n  return (\n    <aside className=\"menu column is-one-fifth m-4\">\n      <p className=\"menu-label has-text-link\">\n        <Link to='/rooms' onClick={() => {setSelectedRoom(null); setSelectedSensor(null)}}>\n          Rooms\n        </Link>\n      </p>\n      <ul className=\"menu-list\">\n        {rooms.map(room => (\n          <li>\n          <Link \n            to={`/room/${room.id}`} \n            onClick={() => {setSelectedRoom(room.id); setSelectedSensor(null)}} \n            className={room.id == selectedRoom ? 'is-active' : ''}>\n            {room.name}\n          </Link>\n          {room.id == selectedRoom ? \n            <ul>\n              {sensors.map(sensor => (\n                <li>\n                  <Link to={`/room/${room.id}/sensor/${sensor.id}`}\n                    onClick={() => setSelectedSensor(sensor.id)} \n                    className={sensor.id == selectedSensor ? 'is-active' : ''}>\n                    {sensor.name}\n                  </Link>\n                </li> \n              ))}\n              <li>\n                <Link \n                  onClick={() => setSelectedSensor(null)} \n                  to={`/add_sensor/${room.id}`}>\n                  <span className=\"has-text-link\">\n                    <FontAwesomeIcon icon={faPlus} />\n                  </span>\n                  <span className=\"ml-2\">Add sensor</span>\n                </Link>\n              </li>\n            </ul>\n           : ''}\n          </li>\n        ))}\n        <li>\n          <Link to='/add_room' onClick={() => setSelectedRoom(null)}>\n            <span className=\"has-text-link\">\n              <FontAwesomeIcon icon={faPlus} />\n             </span>\n            <span className=\"ml-2\">Add room</span>\n          </Link>\n        </li>\n      </ul>\n    </aside>\n  )\n}\n\nexport default Navigator","import { faPlus } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useStoreState } from \"easy-peasy\"\nimport { Link } from \"react-router-dom\"\nconst Rooms = () => {\n  const rooms = useStoreState(state => state.rooms)\n\n  return (\n    <div className=\"column\">\n      <h1 className=\"title is-3 m-4\">Rooms</h1>\n      <div class=\"is-flex is-flex-wrap-wrap\">\n        {rooms.map(room => (\n          <div className=\"card m-4\">\n            <Link to={`/room/${room.id}`}>\n              <div className=\"card-content\">\n                <p className=\"title is-3\">{room.name} <span className='subtitle is-4'>({room.id})</span></p>\n                <p className=\"subtitle is-5\">{room.description}</p>\n                <p>Sensors connected: {room.sensors}</p>\n                <p>Last update: {room.last_update}</p>\n              </div>\n            </Link>\n          </div>\n        ))}\n        <div className=\"card m-4\">\n          <Link to='/add_room'>\n            <div className=\"card-content\">\n              <p className=\"title is-3\">Add room</p>\n              <p className=\"subtitle is-1 has-text-success\">\n                <FontAwesomeIcon icon={faPlus} />\n              </p>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Rooms","import { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\"\nimport { deleteRoom, getSensors } from \"../js/api\";\n\nconst Room = () => {\n  const { room_id } = useParams();\n  const history = useHistory();\n  const removeRoom = useStoreActions(action => action.removeRoom)\n  const setSensors = useStoreActions(action => action.setSensors)\n\n  const rooms = useStoreState(state => state.rooms)\n  const sensors = useStoreState(state => state.sensors)\n  const room = rooms.filter(room => room.id == room_id)[0] \n\n  \n\n  const handleRoomDelete = () => {\n    deleteRoom(room_id).then(res => {\n      if (res.message) {\n        history.push('/')\n        removeRoom(room_id)\n      }\n    })\n  }\n\n  useEffect(() => {\n    getSensors(room_id).then(res => setSensors(res.sensors) ) \n  }, [room_id])\n\n  return (\n    <div className=\"column\">\n      <div className=\"is-flex is-justify-content-space-between\">\n        <p className=\"title is-3 mt-4 ml-2\">{room.name}</p>\n        <p \n          onClick={handleRoomDelete}\n          className=\"has-text-danger p-4 m-4 title is-5\">\n          <FontAwesomeIcon icon={faTrash} />\n        </p>\n      </div>\n      <p className=\"subtitle is-5 ml-4\">Updated at: {room.last_update}</p>\n      <div class=\"is-flex is-flex-wrap-wrap\">\n        {sensors.map(sensor => (\n          <div className=\"card m-4\">\n            <Link to={`/room/${room_id}/sensor/${sensor.id}`}>\n              <div className=\"card-content\">\n                <p className=\"title is-3\">{sensor.name}</p>\n                <p className=\"subtitle is-5\">{sensor.variable}</p>\n                <p>\n                  <span className=\"\">{sensor.value} </span>\n                  <span className=\"\">{sensor.unit} </span>\n                </p>\n              </div>\n            </Link>\n          </div>\n        ))}\n        <div className=\"card m-4\">\n          <Link to={`/add_sensor/${room_id}`}>\n            <div className=\"card-content\">\n              <p className=\"title is-3\">Add sensor</p>\n              <p className=\"subtitle is-1 has-text-success\">\n                <FontAwesomeIcon icon={faPlus} />\n              </p>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Room","export const toDateTime = timestamp => {\n  const time = new Date(timestamp)\n  return time.toLocaleString('sv-SE')\n}\n\nexport const toDate = timestamp => {\n  const time = new Date(timestamp)\n  return time.toLocaleString('sv-SE').split(' ')[0]\n}\n\nexport const toTime = timestamp => {\n  const time = new Date(timestamp)\n  return time.toLocaleString('sv-SE').split(' ')[1]\n}\n\nexport const timeFromNow = time => {\n\tlet unixTime = new Date(time).getTime();\n\tif (!unixTime) return;\n\tlet now = new Date().getTime();\n\tlet difference = (unixTime / 1000) - (now / 1000);\n\tlet tfn = {};\n\n  tfn.when = 'now';\n\tif (difference > 0) {\n\t\ttfn.when = 'future';\n\t} else if (difference < -1) {\n\t\ttfn.when = 'past';\n\t}\n\n\tdifference = Math.abs(difference);\n\n\tif (difference / (60 * 60 * 24 * 365) > 1) {\n\t\ttfn.unitOfTime = 'years';\n\t\ttfn.time = Math.floor(difference / (60 * 60 * 24 * 365));\n\t} else if (difference / (60 * 60 * 24 * 45) > 1) {\n\t\ttfn.unitOfTime = 'months';\n\t\ttfn.time = Math.floor(difference / (60 * 60 * 24 * 45));\n\t} else if (difference / (60 * 60 * 24) > 1) {\n\t\ttfn.unitOfTime = 'days';\n\t\ttfn.time = Math.floor(difference / (60 * 60 * 24));\n\t} else if (difference / (60 * 60) > 1) {\n\t\ttfn.unitOfTime = 'hours';\n\t\ttfn.time = Math.floor(difference / (60 * 60));\n\t} else {\n\t\ttfn.unitOfTime = 'seconds';\n\t\ttfn.time = Math.floor(difference);\n\t}\n\n\treturn `${tfn.time} ${tfn.unitOfTime} ${tfn.when == 'past' ?  'ago' : 'ahead'}` ;\n}","import { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2'\nimport { useHistory, useParams } from 'react-router-dom';\nimport { deleteSensor, getMeasurements } from '../js/api';\nimport { timeFromNow, toDateTime, toTime } from '../js/helpers';\n\nconst Sensor = () => {\n  const [realtime, setRealtime] = useState(true);\n  const {sensor_id, room_id} = useParams()\n  const sensors = useStoreState(state => state.sensors)\n  const removeSensor = useStoreActions(actions => actions.removeSensor)\n  const sensor = sensors.filter(sensor => sensor.id == sensor_id)[0]\n  const history = useHistory()\n  const measurements = useStoreState(state => state.measurements)\n  const setMeasurements = useStoreActions(actions => actions.setMeasurements)\n\n  const initialData = (labels, data) => ({\n    labels,\n    datasets: [{\n      label: 'Temperature ॰C',\n      data,\n      fill: false,\n      borderColor: '#2ecc71',\n      tension: 0.1\n    }]\n  });\n\n  const options = {\n    animation: {\n        duration: 0\n    }\n  }\n\n  // const measurements = [\n  //   { value: 18.19, timestamp: 1627859796566 },\n  //   { value: 19.19, timestamp: 1627860796566 },\n  //   { value: 20.19, timestamp: 1627867796566 },\n  //   { value: 15.19, timestamp: 1627959796566 },\n  //   { value: 14.19, timestamp: 1628859796566 },\n  // ]\n\n  const labels = measurements.map(measurement => toTime(measurement.updated_at))\n  const data = measurements.map(measurement => measurement.value)\n\n  useEffect(() => {\n    console.log('...measurements')\n    getMeasurements(room_id, sensor_id).then(res => {\n      console.log(res.measurements)\n      setMeasurements(res.measurements)\n    })\n  }, [sensor_id])\n\n\n  const handleSensorDelete = () => {\n    deleteSensor(room_id, sensor_id).then(res => {\n      if (res.message) {\n        history.push(`/room/${room_id}`)\n        removeSensor(sensor_id)\n      }\n    }) \n  }\n\n  return (\n    <div className=\"column\">\n      <div className=\"is-flex is-justify-content-space-between\">\n        <p className=\"title is-3 mt-4 ml-2\">{sensor.name}</p>\n        <p \n          onClick={handleSensorDelete}\n          className=\"has-text-danger p-4 m-4 title is-5\">\n          <FontAwesomeIcon icon={faTrash} />\n        </p>\n      </div>\n      <p className=\"subtitle is-5 ml-3\">Last update: {timeFromNow(sensor.last_update)}</p>\n      <p className=\"subtitle is-5 ml-3\">{sensor.description}</p>\n      <div className=\"card m-4\">\n        <Line data={() => initialData(labels, data)} options={options}/>\n      </div>\n      <div className=\"is-flex is-justify-content-space-between\">\n        <button\n          onClick={() => setRealtime(true)}\n          className={`button is-outlined ml-4 ${realtime && 'is-success'}`}>\n            Realtime\n        </button>\n        <div className=\"is-flex\">\n          <label class=\"label ml-4\">From:</label>\n          <input type=\"date\" className={`input ml-2 ${!realtime && 'is-success'}`} />\n          <label class=\"label ml-4\">To:</label>\n          <input type=\"date\" className={`input ml-2 ${!realtime && 'is-success'}`} />\n          <button \n            onClick={() => setRealtime(false)}\n            className={`button is-outlined ml-4 mr-4 ${!realtime && 'is-success'}`}>\n              Query\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sensor","import { action } from 'easy-peasy'\n\nexport default {\n  rooms: [],\n  setRooms: action((state, rooms) => {state.rooms = [...rooms]}),\n  addRoom: action((state, room) => {state.rooms.push(room)}),\n  removeRoom: action((state, id) => {state.rooms = state.rooms.filter(room => room.id != id)}),\n  updateRoom: action((state, id, obj) => {\n    state.rooms = state.rooms.map(room => room.id == id ? {...room, ...obj} : room)\n  }),\n\n  sensors: [],\n  setSensors: action((state, sensors) => {state.sensors = [...sensors]}),\n  removeSensor: action((state, id) => {state.sensors = state.sensors.filter(sensor => sensor.id != id)}),\n  \n  measurements: [],\n  setMeasurements: action((state, measurements) => {state.measurements = [...measurements]}),\n}","import { Switch, Redirect, Route } from 'react-router-dom';\nimport { StoreProvider, createStore } from 'easy-peasy';\nimport AddRoom from \"./AddRoom\";\nimport AddSensor from \"./AddSensor\";\nimport Navigator from \"./Navigator\";\nimport Rooms from \"./Rooms\";\nimport Room from \"./Room\";\nimport Sensor from \"./Sensor\";\nimport model from '../js/model'\n\nconst store = createStore(model)\n\nconst App = () => {\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"columns\">\n        <StoreProvider store={store}>\n          <Navigator />\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/rooms\" />\n            <Route path=\"/rooms\" component={Rooms} />\n            <Route path=\"/room/:room_id/sensor/:sensor_id\" component={Sensor} />\n            <Route path=\"/room/:room_id\" component={Room} />\n            <Route path=\"/add_room\" component={AddRoom} />\n            <Route path=\"/add_sensor/:room_id\" component={AddSensor} />\n          </Switch>\n        </StoreProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './css/index.css';\nimport './css/style.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}