{"version":3,"sources":["js/api.js","components/AddRoom.jsx","components/AddSensor.jsx","js/helpers.js","components/Clock.jsx","components/Navigator.jsx","components/Rooms.jsx","components/Room.jsx","components/Sensor.jsx","js/model.js","components/WirelessConfig.jsx","components/SystemConfig.jsx","components/App.jsx","index.js"],"names":["host","window","location","hostname","socket","io","connect","getRooms","a","console","log","url","axios","get","response","data","createRoom","room","post","deleteRoom","room_id","delete","updateRoom","obj","put","getSensors","createSensor","sensor","deleteSensor","sensor_id","getMeasurements","getMeasurementsQuery","deviceNetCard","deviceNetScan","getDeviceId","updateNetwork","ssid","pass","devicePowerOff","deviceRestart","AddRoom","history","useHistory","useState","name","setName","description","setDescription","id","setId","addRoom","useStoreActions","actions","className","value","onChange","e","target","type","placeholder","min","step","onClick","sensors","then","res","message","push","AddSensor","variable","setVariable","unit","setUnit","useParams","rooms","useStoreState","state","newSensor","currentSensors","filter","updateRoomDB","toTime","timestamp","Date","toLocaleString","split","setSavedStorage","key","localStorage","setItem","JSON","stringify","Clock","time","setTime","connected","setConnected","useEffect","setInterval","navigator","onLine","addEventListener","disabled","icon","faWifi","size","Navigator","selectedRoom","setSelectedRoom","selectedSensor","setSelectedSensor","setRooms","setMessage","on","msg","parse","off","to","map","faPlus","faPowerOff","Rooms","class","updated_at","Room","removeRoom","action","setSensors","length","tempSensors","s","last_measurement","confirm","faTrash","Sensor","realtime","setRealtime","now","queryDate","setQueryDate","labels","setLabels","setData","removeSensor","measurements","setMeasurements","addMeasurement","shiftMeasurement","setValue","measurement","datasets","label","fill","borderColor","tension","initialData","options","animation","duration","plugins","legend","display","scales","y","suggestedMin","suggestedMax","ticks","font","x","faCog","spin","date","defaults","wifissid","wifipass","getSavedStorage","getItem","shift","setWifipass","setWifissid","WirelessConfig","networks","setNetworks","networkCard","setNetworkCard","card","network","snr","SystemConfig","faRedo","store","createStore","model","App","exact","from","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd541b1d.chunk.js","sourcesContent":["import axios from \"axios\";\nimport io from \"socket.io-client\";\n\nconst host = `${window.location.hostname}:5001`;\n// const host = \"localhost:9999\";\n\nexport const socket = io.connect(`http://${host}`);\n\nexport const getRooms = async () => {\n  console.log(\"... getting rooms\");\n  const url = `http://${host}/api/rooms`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const createRoom = async (room) => {\n  console.log(\"... creating room\");\n  const url = `http://${host}/api/rooms`;\n  const response = await axios.post(url, room);\n  return response.data;\n};\n\nexport const deleteRoom = async (room_id) => {\n  console.log(\"... deleting room\");\n  const url = `http://${host}/api/rooms/${room_id}`;\n  const response = await axios.delete(url);\n  return response.data;\n};\n\nexport const updateRoom = async (room_id, obj) => {\n  console.log(\"... updating room\");\n  const url = `http://${host}/api/rooms/${room_id}`;\n  const response = await axios.put(url, obj);\n  return response.data;\n};\n\nexport const getSensors = async (room_id) => {\n  console.log(\"... getting sensors\");\n  const url = `http://${host}/api/rooms/${room_id}/sensors`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const createSensor = async (room_id, sensor) => {\n  console.log(\"... creating room\");\n  const url = `http://${host}/api/rooms/${room_id}/sensors`;\n  const response = await axios.post(url, sensor);\n  return response.data;\n};\n\nexport const deleteSensor = async (room_id, sensor_id) => {\n  console.log(\"... deleting sensor\");\n  const url = `http://${host}/api/rooms/${room_id}/sensors/${sensor_id}`;\n  const response = await axios.delete(url);\n  return response.data;\n};\n\nexport const getMeasurements = async (room_id, sensor_id) => {\n  console.log(\"... getting sensor values\");\n  const url = `http://${host}/api/rooms/${room_id}/sensors/${sensor_id}/measurements`;\n  const response = await axios.get(url);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMeasurementsQuery = async (room_id, sensor_id, data) => {\n  console.log(\"... getting sensor values query\");\n  const url = `http://${host}/api/rooms/${room_id}/sensors/${sensor_id}/measurements/query`;\n  const response = await axios.post(url, data);\n  return response.data;\n};\n\nexport const deviceNetCard = async () => {\n  console.log(\"... getting events\");\n  const url = `http://${host}/api/network/card`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const deviceNetScan = async () => {\n  console.log(\"... getting events\");\n  const url = `http://${host}/api/network/scan`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getDeviceId = async () => {\n  console.log(\"... getting device id\");\n  const url = `http://${host}/api/id`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const updateNetwork = async (ssid, pass) => {\n  console.log(\"... configure wifi\");\n  const url = `http://${host}/api/network`;\n  const response = await axios.post(url, { ssid, pass });\n  return response.data;\n};\n\nexport const devicePowerOff = async () => {\n  console.log(\"... shutting down\");\n  const url = `http://${host}/api/poweroff`;\n  const response = await axios.post(url);\n  return response.data;\n};\n\nexport const deviceRestart = async () => {\n  console.log(\"... restarting\");\n  const url = `http://${host}/api/restart`;\n  const response = await axios.post(url);\n  return response.data;\n};\n","import { useStoreActions } from \"easy-peasy\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { createRoom } from \"../js/api\"\n\nconst AddRoom = () => {\n  const history = useHistory()\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [id, setId] = useState('')\n  const addRoom = useStoreActions(actions => actions.addRoom)\n\n  const handleSave = () => {\n    const sensors = 0\n    createRoom({name, description, id, sensors})\n      .then(res => {if(res.message) {\n        addRoom({name, description, id, sensors})\n        history.push('/')\n    }} )\n  }\n\n  return (\n    <div className=\"column\">\n      <div className=\"card m-4 p-4\">\n        <div className=\"title is-3\">Add room</div>\n        <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <p className=\"control\">\n            <input \n              value={name} onChange={e => setName(e.target.value)}\n              className=\"input\" type=\"text\" placeholder=\"Room name\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <p className=\"control\">\n            <textarea \n              value={description} onChange={e => setDescription(e.target.value)}\n              className=\"textarea\" type=\"text\" placeholder=\"Room description\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Id</label>\n          <p className=\"control\">\n            <input \n              value={id} onChange={e => setId(e.target.value)}\n              className=\"input\" type=\"number\" min='1' step=\"1\" placeholder=\"Unique id\" />\n          </p>\n        </div>\n        <div className=\"field mt-4\">\n          <div className=\"control\">\n            <button className=\"button is-primary\" onClick={handleSave}>\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddRoom","import { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { createSensor, updateRoom as updateRoomDB } from \"../js/api\";\n\nconst AddSensor = () => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [variable, setVariable] = useState('');\n  const [unit, setUnit] = useState('');\n  const [id, setId] = useState('');\n\n  const { room_id } = useParams();\n  const history = useHistory()\n\n  const rooms = useStoreState(state => state.rooms)\n  const updateRoom = useStoreActions(actions => actions.updateRoom)\n\n  const handleSaveSensor = () => {\n    const newSensor = {name, description, variable, unit, id}\n\n    const currentSensors = rooms.filter(room => room.id == room_id)[0].sensors\n    createSensor(room_id, newSensor).then(res => console.log('sensor created'))\n    updateRoomDB(room_id, {sensors: currentSensors+1})\n      .then(res => {\n        updateRoom(room_id, {sensors: currentSensors+1})\n        history.push(`/room/${room_id}`)\n      })\n  }\n  \n  return (\n    <div className=\"column\">\n      <div className=\"card m-4 p-4\">\n        <div className=\"title is-3\">Add Sensor</div>\n        <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setName(e.target.value)} value={name}\n              className=\"input\" type=\"text\" placeholder=\"Sensor name\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <p className=\"control\">\n            <textarea \n              onChange={e => setDescription(e.target.value)} value={description}\n              className=\"textarea\" type=\"text\" placeholder=\"Sensor description\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Variable</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setVariable(e.target.value)} value={variable}\n              className=\"input\" type=\"text\" placeholder=\"Ex: Temperature\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Unit</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setUnit(e.target.value)} value={unit}\n              className=\"input\" type=\"text\" placeholder=\"Ex: ॰C\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Id</label>\n          <p className=\"control\">\n            <input \n              onChange={e => setId(e.target.value)} value={id}\n              className=\"input\" type=\"number\" min='1' step=\"1\" placeholder=\"Unique id\" />\n          </p>\n        </div>\n        <div className=\"field mt-4\">\n          <div className=\"control\">\n            <button className=\"button is-primary\" onClick={handleSaveSensor}>\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddSensor","export const toDateTime = (timestamp) => {\n  const time = new Date(timestamp);\n  return time.toLocaleString(\"sv-SE\");\n};\n\nexport const toDate = (timestamp) => {\n  const time = new Date(timestamp);\n  return time.toLocaleString(\"sv-SE\").split(\" \")[0];\n};\n\nexport const toTime = (timestamp) => {\n  const time = new Date(timestamp);\n  return time.toLocaleString(\"sv-SE\").split(\" \")[1];\n};\n\nexport const timeFromNow = (time) => {\n  let unixTime = new Date(time).getTime();\n  if (!unixTime) return;\n  let now = new Date().getTime();\n  let difference = unixTime / 1000 - now / 1000;\n  let tfn = {};\n\n  tfn.when = \"now\";\n  if (difference > 0) {\n    tfn.when = \"future\";\n  } else if (difference < -1) {\n    tfn.when = \"past\";\n  }\n\n  difference = Math.abs(difference);\n\n  if (difference / (60 * 60 * 24 * 365) > 1) {\n    tfn.unitOfTime = \"years\";\n    tfn.time = Math.floor(difference / (60 * 60 * 24 * 365));\n  } else if (difference / (60 * 60 * 24 * 45) > 1) {\n    tfn.unitOfTime = \"months\";\n    tfn.time = Math.floor(difference / (60 * 60 * 24 * 45));\n  } else if (difference / (60 * 60 * 24) > 1) {\n    tfn.unitOfTime = \"days\";\n    tfn.time = Math.floor(difference / (60 * 60 * 24));\n  } else if (difference / (60 * 60) > 1) {\n    tfn.unitOfTime = \"hours\";\n    tfn.time = Math.floor(difference / (60 * 60));\n  } else {\n    tfn.unitOfTime = \"seconds\";\n    tfn.time = Math.floor(difference);\n  }\n\n  return `${tfn.time} ${tfn.unitOfTime} ${\n    tfn.when == \"past\" ? \"ago\" : \"ahead\"\n  }`;\n};\n\nexport const setSavedStorage = (key, obj) => {\n  window.localStorage.setItem(key, JSON.stringify(obj));\n};\n","import { faWifi } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { toTime } from \"../js/helpers\";\n\nconst Clock = () => {\n  const [time, setTime] = useState(Date());\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    setInterval(() => {\n      setTime(Date());\n    }, 1000);\n    setConnected(navigator.onLine);\n    window.addEventListener(\"online\", () => setConnected(true));\n    window.addEventListener(\"offline\", () => setConnected(false));\n  }, []);\n\n  return (\n    <p\n      disabled\n      className=\"button is-outlined clock heading has-text-white is-size-4 is-flex p-2\"\n    >\n      <span>{toTime(time)}</span>\n      <FontAwesomeIcon\n        icon={faWifi}\n        size=\"xs\"\n        className={`ml-1 ${connected ? \"has-text-success\" : \"has-text-danger\"}`}\n      />\n    </p>\n  );\n};\nexport default Clock;\n","import { faPlus, faPowerOff, faWifi } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getRooms, socket } from \"../js/api\";\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\nimport Clock from \"./Clock\";\n\nconst Navigator = () => {\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const rooms = useStoreState((state) => state.rooms);\n  const sensors = useStoreState((state) => state.sensors);\n  const message = useStoreState((state) => state.message);\n  const setRooms = useStoreActions((actions) => actions.setRooms);\n  const setMessage = useStoreActions((actions) => actions.setMessage);\n\n  useEffect(() => {\n    getRooms().then((res) => setRooms(res.rooms));\n    socket.on(\"message\", (msg) => {\n      setMessage(JSON.parse(msg));\n      console.log(JSON.parse(msg));\n    });\n    return () => {\n      socket.off(\"message\");\n    };\n  }, []);\n\n  return (\n    <aside className=\"menu column is-one-fifth p-4 is-size-5\">\n      <p className=\"menu-label has-text-link ml-2\">\n        <Link\n          to=\"/rooms\"\n          onClick={() => {\n            setSelectedRoom(null);\n            setSelectedSensor(null);\n          }}\n        >\n          Rooms\n        </Link>\n      </p>\n      <ul className=\"menu-list p-0 m-0\">\n        {rooms.map((room) => (\n          <li>\n            <Link\n              to={`/room/${room.id}`}\n              onClick={() => {\n                setSelectedSensor(null);\n                if (selectedRoom == room.id) {\n                  setSelectedRoom(null);\n                } else {\n                  setSelectedRoom(room.id);\n                }\n              }}\n              className={room.id == selectedRoom ? \"is-active\" : \"\"}\n            >\n              {room.name}\n            </Link>\n            {room.id == selectedRoom ? (\n              <ul className=\"p-0 m-0\">\n                {sensors.map((sensor) => (\n                  <li className=\"p-0 m-0\">\n                    <Link\n                      to={`/room/${room.id}/sensor/${sensor.id}`}\n                      onClick={() => setSelectedSensor(sensor.id)}\n                      className={\n                        sensor.id == selectedSensor\n                          ? \"p-0 m-0 is-active\"\n                          : \"p-0 m-0\"\n                      }\n                    >\n                      {sensor.name}\n                    </Link>\n                  </li>\n                ))}\n                <li>\n                  <Link\n                    onClick={() => setSelectedSensor(null)}\n                    to={`/add_sensor/${room.id}`}\n                  >\n                    <span className=\"has-text-link\">\n                      <FontAwesomeIcon icon={faPlus} />\n                    </span>\n                    <span className=\"ml-2 is-size-6\">Add sensor</span>\n                  </Link>\n                </li>\n              </ul>\n            ) : (\n              \"\"\n            )}\n          </li>\n        ))}\n        <li>\n          <Link to=\"/add_room\" onClick={() => setSelectedRoom(null)}>\n            <span className=\"has-text-link\">\n              <FontAwesomeIcon icon={faPlus} />\n            </span>\n            <span className=\"ml-2\">Add room</span>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/wireless\" onClick={() => setSelectedRoom(null)}>\n            <span className=\"has-text-link\">\n              <FontAwesomeIcon icon={faWifi} />\n            </span>\n            <span className=\"ml-2\">Wireless</span>\n          </Link>\n          <Link to=\"/system\" onClick={() => setSelectedRoom(null)}>\n            <span className=\"has-text-link\">\n              <FontAwesomeIcon icon={faPowerOff} />\n            </span>\n            <span className=\"ml-2\">System</span>\n          </Link>\n        </li>\n      </ul>\n    </aside>\n  );\n};\n\nexport default Navigator;\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useStoreState } from \"easy-peasy\";\nimport { Link } from \"react-router-dom\";\nimport { toDateTime } from \"../js/helpers\";\nconst Rooms = () => {\n  const rooms = useStoreState((state) => state.rooms);\n\n  return (\n    <div className=\"column content\">\n      <h1 className=\"title is-3 m-4\">Rooms</h1>\n      <div class=\"is-flex is-flex-wrap-wrap\">\n        {rooms.map((room) => (\n          <div className=\"card m-4\">\n            <Link to={`/room/${room.id}`}>\n              <div className=\"card-content\">\n                <p className=\"title is-3\">\n                  {room.name} <span className=\"subtitle is-4\">({room.id})</span>\n                </p>\n                <p className=\"subtitle is-5\">{room.description}</p>\n                <p>Sensors connected: {room.sensors}</p>\n                <p>Last update: {toDateTime(room.updated_at)}</p>\n              </div>\n            </Link>\n          </div>\n        ))}\n        <div className=\"card m-4\">\n          <Link to=\"/add_room\">\n            <div className=\"card-content\">\n              <p className=\"title is-3\">Add room</p>\n              <p className=\"subtitle is-1 has-text-success\">\n                <FontAwesomeIcon icon={faPlus} />\n              </p>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Rooms;\n","import { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteRoom, getSensors } from \"../js/api\";\nimport { timeFromNow, toDateTime, toTime } from \"../js/helpers\";\n\nconst Room = () => {\n  const { room_id } = useParams();\n  const history = useHistory();\n  const removeRoom = useStoreActions((action) => action.removeRoom);\n  const setSensors = useStoreActions((action) => action.setSensors);\n\n  const rooms = useStoreState((state) => state.rooms);\n  const sensors = useStoreState((state) => state.sensors);\n  const message = useStoreState((state) => state.message);\n  const room = rooms.filter((room) => room.id == room_id)[0];\n\n  const handleRoomDelete = () => {\n    if (window.confirm(\"Delete room and all data?\")) {\n      deleteRoom(room_id).then((res) => {\n        if (res.message) {\n          history.push(\"/\");\n          removeRoom(room_id);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    getSensors(room_id).then((res) => setSensors(res.sensors));\n  }, [room_id]);\n\n  useEffect(() => {\n    if (rooms.length == 0) history.push(\"/\");\n  }, []);\n\n  useEffect(() => {\n    if (message.room_id == room_id) {\n      let tempSensors = sensors.map((s) =>\n        s.id == message.sensor_id\n          ? {\n              ...s,\n              last_measurement: message.value,\n              updated_at: message.updated_at,\n            }\n          : s\n      );\n      setSensors(tempSensors);\n    }\n  }, [message]);\n\n  return (\n    <div className=\"content column m-0 p-0\">\n      {rooms.length != 0 ? (\n        <>\n          <div className=\"\">\n            <p className=\"title is-3 mt-4 mt-0 ml-2 p-0\">\n              {room.name}{\" \"}\n              <span className=\"is-size-6 has-text-grey\">({room.id})</span>\n              <FontAwesomeIcon\n                onClick={handleRoomDelete}\n                className=\"ml-4 has-text-link is-size-6\"\n                icon={faTrash}\n              />\n            </p>\n          </div>\n          <div class=\"is-flex is-flex-wrap-wrap\">\n            {sensors.map((sensor) => (\n              <div className=\"card m-1\">\n                <Link to={`/room/${room_id}/sensor/${sensor.id}`}>\n                  <div className=\"card-content\">\n                    <p className=\"title is-3\">\n                      {sensor.name}{\" \"}\n                      <span className=\"is-size-6 has-text-grey\">\n                        ({sensor.id})\n                      </span>\n                    </p>\n                    <p className=\"subtitle is-6 m-0\">{sensor.variable}</p>\n                    <p className=\"m-0\">\n                      <span className=\"is-size-2\">\n                        {sensor.last_measurement}{\" \"}\n                      </span>\n                      <span className=\"is-size-4\">{sensor.unit} </span>\n                    </p>\n                  </div>\n                </Link>\n              </div>\n            ))}\n            <div className=\"card m-1\">\n              <Link to={`/add_sensor/${room_id}`}>\n                <div className=\"card-content\">\n                  <p className=\"title is-3\">Add sensor</p>\n                  <p className=\"subtitle is-1 has-text-success\">\n                    <FontAwesomeIcon icon={faPlus} />\n                  </p>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Room;\n","import { faCog, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { deleteSensor, getMeasurements, getMeasurementsQuery } from \"../js/api\";\nimport { timeFromNow, toDate, toDateTime, toTime } from \"../js/helpers\";\n\nconst Sensor = () => {\n  const [realtime, setRealtime] = useState(true);\n  const [queryDate, setQueryDate] = useState(toDate(Date.now()));\n  const [labels, setLabels] = useState([]);\n  const [data, setData] = useState([]);\n  const { sensor_id, room_id } = useParams();\n  const sensors = useStoreState((state) => state.sensors);\n  const message = useStoreState((state) => state.message);\n  const removeSensor = useStoreActions((actions) => actions.removeSensor);\n  const sensor = sensors.filter((sensor) => sensor.id == sensor_id)[0];\n  const measurements = useStoreState((state) => state.measurements);\n  const setMeasurements = useStoreActions((actions) => actions.setMeasurements);\n  const addMeasurement = useStoreActions((actions) => actions.addMeasurement);\n  const shiftMeasurement = useStoreActions(\n    (actions) => actions.shiftMeasurement\n  );\n  const [value, setValue] = useState(sensor.last_measurement);\n  const history = useHistory();\n\n  const initialData = (labels, data) => ({\n    labels,\n    datasets: [\n      {\n        label: \"Temperature ॰C\",\n        data,\n        fill: false,\n        borderColor: \"#2ecc71\",\n        tension: 0.1,\n      },\n    ],\n  });\n\n  const options = {\n    animation: {\n      duration: 0,\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: 10,\n        suggestedMax: 45,\n        ticks: {\n          font: {\n            size: 20,\n          },\n        },\n      },\n      x: {\n        ticks: {\n          font: {\n            size: 20,\n          },\n        },\n      },\n    },\n  };\n\n  useEffect(() => {\n    if (sensors.length == 0) history.push(\"/\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"...measurements\");\n    getMeasurements(room_id, sensor_id).then((res) => {\n      console.log(res.measurements);\n      setMeasurements(res.measurements);\n    });\n  }, [sensor_id]);\n\n  useEffect(() => {\n    if (message.room_id == room_id && message.sensor_id == sensor_id) {\n      setValue(message.value);\n      if (realtime) {\n        if (measurements.length > 300) shiftMeasurement();\n        addMeasurement({\n          ...message,\n          id: Date.now(),\n          updated_at: Date(message.updated_at),\n        });\n      }\n    }\n  }, [message]);\n\n  useEffect(() => {\n    setLabels(\n      measurements.map((measurement) => toTime(measurement.updated_at))\n    );\n    setData(measurements.map((measurement) => measurement.value));\n  }, [measurements]);\n\n  const onSetRealtime = () => {\n    getMeasurements(room_id, sensor_id).then((res) => {\n      console.log(res.measurements);\n      setMeasurements(res.measurements);\n    });\n    setRealtime(true);\n  };\n\n  const handleSensorDelete = () => {\n    if (window.confirm(\"Delete sensor and all data?\")) {\n      deleteSensor(room_id, sensor_id).then((res) => {\n        if (res.message) {\n          history.push(`/room/${room_id}`);\n          removeSensor(sensor_id);\n        }\n      });\n    }\n  };\n\n  const handleQuery = (e) => {\n    console.log(\"query date:\", e.target.value);\n    setQueryDate(e.target.value);\n    setRealtime(false);\n    getMeasurementsQuery(room_id, sensor_id, { date: e.target.value }).then(\n      (res) => {\n        console.log(res.measurements);\n        setMeasurements(res.measurements);\n      }\n    );\n  };\n\n  return (\n    <div className=\"column pt-4\">\n      {sensors.length != 0 ? (\n        <>\n          <div className=\"is-flex is-justify-content-space-between\">\n            <p>\n              <span className=\"title is-3\">{sensor.name}: </span>\n              <span className=\"is-size-3 has-text-success \">{value}</span>\n              <span className=\"is-size-4 has-text-success \">\n                {\" \"}\n                {sensor.unit}\n              </span>\n            </p>\n            <p\n              onClick={handleSensorDelete}\n              className=\"has-text-danger title is-5\"\n            >\n              <FontAwesomeIcon icon={faTrash} className=\"mt-4 mr-4\" />\n            </p>\n          </div>\n          <div className=\"card\">\n            <Line data={() => initialData(labels, data)} options={options} />\n          </div>\n          <div className=\"is-flex is-justify-content-space-between p-3\">\n            <button\n              onClick={onSetRealtime}\n              className={`is-medium button is-outlined ${\n                realtime && \"is-success\"\n              }`}\n            >\n              <FontAwesomeIcon icon={faCog} spin={realtime} className=\"mr-2\" />\n              Realtime\n            </button>\n            <div className=\"is-flex\">\n              <label class=\"label is-medium mr-2\">Date:</label>\n              <input\n                onChange={handleQuery}\n                value={queryDate}\n                type=\"date\"\n                className={`is-medium input mr-3 ${!realtime && \"is-success\"}`}\n              />\n            </div>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Sensor;\n","import { action } from \"easy-peasy\";\n\nconst defaults = {\n  wifissid: \"wifi_name\",\n  wifipass: \"wifi_password\",\n};\n\nconst getSavedStorage = (key) => {\n  return JSON.parse(window.localStorage.getItem(key)) || defaults[key];\n};\n\nexport default {\n  rooms: [],\n  setRooms: action((state, rooms) => {\n    state.rooms = [...rooms];\n  }),\n  addRoom: action((state, room) => {\n    state.rooms.push(room);\n  }),\n  removeRoom: action((state, id) => {\n    state.rooms = state.rooms.filter((room) => room.id != id);\n  }),\n  updateRoom: action((state, id, obj) => {\n    state.rooms = state.rooms.map((room) =>\n      room.id == id ? { ...room, ...obj } : room\n    );\n  }),\n\n  sensors: [],\n  setSensors: action((state, sensors) => {\n    state.sensors = [...sensors];\n  }),\n  removeSensor: action((state, id) => {\n    state.sensors = state.sensors.filter((sensor) => sensor.id != id);\n  }),\n\n  measurements: [],\n  setMeasurements: action((state, measurements) => {\n    state.measurements = [...measurements];\n  }),\n  addMeasurement: action((state, measurement) => {\n    state.measurements.push(measurement);\n  }),\n  shiftMeasurement: action((state) => {\n    state.measurements.shift();\n  }),\n\n  message: {},\n  setMessage: action((state, message) => {\n    state.message = message;\n  }),\n\n  wifipass: getSavedStorage(\"wifipass\"),\n  wifissid: getSavedStorage(\"wifissid\"),\n  setWifipass: action((state, wifipass) => {\n    state.wifipass = wifipass;\n  }),\n  setWifissid: action((state, wifissid) => {\n    state.wifissid = wifissid;\n  }),\n};\n","import { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { deviceNetCard, deviceNetScan, updateNetwork } from \"../js/api\";\nimport { setSavedStorage } from \"../js/helpers\";\nimport { useState, useEffect } from \"react\";\n\nconst WirelessConfig = () => {\n  const wifipass = useStoreState((state) => state.wifipass);\n  const wifissid = useStoreState((state) => state.wifissid);\n  const setWifipass = useStoreActions((actions) => actions.setWifipass);\n  const setWifissid = useStoreActions((actions) => actions.setWifissid);\n  const [networks, setNetworks] = useState([]);\n  const [networkCard, setNetworkCard] = useState(null);\n\n  useEffect(() => {\n    deviceNetScan().then((res) => setNetworks(res.networks));\n    deviceNetCard().then((res) => setNetworkCard(res.card));\n  }, []);\n\n  return (\n    <div className=\"column\">\n      <div className=\"card m-4 p-4\">\n        <header className=\"card-header p-2\">\n          <h1>Wireless configuration</h1>\n        </header>\n        <div className=\"card-content\">\n          <div className=\"content\">\n            <div className=\"columns\">\n              <div className=\"column\">\n                <p className=\"subtitle is-4 has-text-centered m-4\">SSID</p>\n                <input\n                  value={wifissid}\n                  type=\"text\"\n                  onChange={(e) => setWifissid(e.target.value)}\n                  className=\"input no-frame-input title is-3 has-text-centered\"\n                />\n              </div>\n              <div className=\"column\">\n                <p className=\"subtitle is-4 has-text-centered m-4\">Password</p>\n                <input\n                  value={wifipass}\n                  type=\"text\"\n                  onChange={(e) => setWifipass(e.target.value)}\n                  className=\"input no-frame-input title is-3 has-text-centered\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer is-flex-direction-column\">\n          <button\n            onClick={() => {\n              setSavedStorage(\"wifissid\", wifissid);\n              setSavedStorage(\"wifipass\", wifipass);\n              updateNetwork(wifissid, wifipass);\n            }}\n            className=\"button card-footer-item\"\n          >\n            Save\n          </button>\n        </div>\n        <div className=\"is-flex is-flex-direction-column is-flex-centered m-4\">\n          <p className=\"heading has-text-centered has-text-link\">\n            Available Networks ({networkCard})\n          </p>\n          <table className=\"table is-bordered is-striped is-narrow\">\n            <thead>\n              <tr>\n                <th className=\"has-text-centered is-size-6\">SSID</th>\n                <th className=\"has-text-centered is-size-6\">SNR</th>\n              </tr>\n            </thead>\n            <tbody>\n              {networks.map((network) => (\n                <tr key={network.ssid}>\n                  <td className=\"has-text-centered is-size-6\">\n                    {\" \"}\n                    {network.ssid}{\" \"}\n                  </td>\n                  <td className=\"has-text-centered is-size-6\">\n                    {\" \"}\n                    {network.snr}{\" \"}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WirelessConfig;\n","import { faPowerOff, faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useEffect, useState } from \"react\";\nimport { devicePowerOff, deviceRestart, getDeviceId } from \"../js/api\";\n\nconst SystemConfig = () => {\n  const [id, setId] = useState(\"\");\n\n  useEffect(() => {\n    getDeviceId().then((res) => setId(res.id));\n  }, []);\n\n  return (\n    <div className=\"column\">\n      <div className=\"card m-4 p-4\">\n        <header className=\"card-header p-2\">\n          <h1>Power control</h1>\n        </header>\n        <div className=\"card-content\">\n          <div className=\"content\">\n            <div className=\"columns\">\n              <div\n                onClick={devicePowerOff}\n                className=\"column is-flex is-flex-centered is-flex-direction-column\"\n              >\n                <FontAwesomeIcon\n                  icon={faPowerOff}\n                  className=\"is-size-1 has-text-link m-2\"\n                />\n                <p>Power Off</p>\n              </div>\n              <div\n                onClick={deviceRestart}\n                className=\"column is-flex is-flex-centered is-flex-direction-column\"\n              >\n                <FontAwesomeIcon\n                  icon={faRedo}\n                  className=\"is-size-1 has-text-link mb-1\"\n                />\n                <p>Restart</p>\n              </div>\n            </div>\n          </div>\n          <footer className=\"card-footer is-flex-centered\">\n            <p className=\"heading has-text-link is-size-6 is-centered\">\n              id: {id}\n            </p>\n          </footer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SystemConfig;\n","import { Switch, Redirect, Route, Router } from \"react-router-dom\";\nimport { StoreProvider, createStore } from \"easy-peasy\";\nimport AddRoom from \"./AddRoom\";\nimport AddSensor from \"./AddSensor\";\nimport Navigator from \"./Navigator\";\nimport Rooms from \"./Rooms\";\nimport Room from \"./Room\";\nimport Sensor from \"./Sensor\";\nimport model from \"../js/model\";\nimport Clock from \"./Clock\";\nimport WirelessConfig from \"./WirelessConfig\";\nimport SystemConfig from \"./SystemConfig\";\n\nconst store = createStore(model);\n\nconst App = () => {\n  return (\n    <div className=\"container is-widescreen\">\n      <div className=\"columns\">\n        <StoreProvider store={store}>\n          <Clock />\n          <Navigator />\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/rooms\" />\n            <Route path=\"/rooms\" component={Rooms} />\n            <Route path=\"/room/:room_id/sensor/:sensor_id\" component={Sensor} />\n            <Route path=\"/room/:room_id\" component={Room} />\n            <Route path=\"/add_room\" component={AddRoom} />\n            <Route path=\"/add_sensor/:room_id\" component={AddSensor} />\n            <Route path=\"/wireless\" component={WirelessConfig} />\n            <Route path=\"/system\" component={SystemConfig} />\n          </Switch>\n        </StoreProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './css/index.css';\nimport './css/style.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}