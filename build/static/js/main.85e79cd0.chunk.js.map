{"version":3,"sources":["components/AddRoom.jsx","components/AddSensor.jsx","components/Navigator.jsx","components/Rooms.jsx","components/Room.jsx","js/helpers.js","components/Sensor.jsx","components/App.jsx","index.js"],"names":["AddRoom","className","type","placeholder","min","step","class","AddSensor","Navigator","sensors","name","id","to","description","nsensors","last_update","map","room","sensor","icon","faPlus","Rooms","Room","value","unit","variable","timeFromNow","time","unixTime","Date","getTime","difference","tfn","when","Math","abs","unitOfTime","floor","Sensor","useState","realtime","setRealtime","measurements","timestamp","labels","measurement","toLocaleString","split","data","datasets","label","fill","borderColor","tension","initialData","options","animation","duration","onClick","App","exact","from","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAoCeA,EApCC,WAEd,OACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,sBACA,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,kBACA,mBAAGA,UAAU,UAAb,SACE,uBAAOA,UAAU,QAAQC,KAAK,OAAOC,YAAY,mBAGrD,sBAAKF,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,yBACA,mBAAGA,UAAU,UAAb,SACE,0BAAUA,UAAU,WAAWC,KAAK,OAAOC,YAAY,0BAG3D,sBAAKF,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,gBACA,mBAAGA,UAAU,UAAb,SACE,uBAAOA,UAAU,QAAQC,KAAK,SAASE,IAAI,IAAIC,KAAK,IAAIF,YAAY,mBAGxE,qBAAKG,MAAM,aAAX,SACE,qBAAKA,MAAM,UAAX,SACE,wBAAQA,MAAM,oBAAd,4BCqBGC,EA/CG,WAChB,OACE,qBAAKN,UAAU,SAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,wBACA,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,kBACA,mBAAGA,UAAU,UAAb,SACE,uBAAOA,UAAU,QAAQC,KAAK,OAAOC,YAAY,qBAGrD,sBAAKF,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,yBACA,mBAAGA,UAAU,UAAb,SACE,0BAAUA,UAAU,WAAWC,KAAK,OAAOC,YAAY,4BAG3D,sBAAKF,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,sBACA,mBAAGA,UAAU,UAAb,SACE,uBAAOA,UAAU,QAAQC,KAAK,OAAOC,YAAY,yBAGrD,sBAAKF,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,kBACA,mBAAGA,UAAU,UAAb,SACE,uBAAOA,UAAU,QAAQC,KAAK,OAAOC,YAAY,qBAGrD,sBAAKF,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,gBACA,mBAAGA,UAAU,UAAb,SACE,uBAAOA,UAAU,QAAQC,KAAK,SAASE,IAAI,IAAIC,KAAK,IAAIF,YAAY,mBAGxE,qBAAKG,MAAM,aAAX,SACE,qBAAKA,MAAM,UAAX,SACE,wBAAQA,MAAM,oBAAd,4B,gBCgCGE,EA/DG,WAChB,IAOMC,EAAU,CACd,CAACC,KAAM,aAAcC,GAAI,GACzB,CAACD,KAAM,aAAcC,GAAI,GACzB,CAACD,KAAM,aAAcC,GAAI,GACzB,CAACD,KAAM,aAAcC,GAAI,GACzB,CAACD,KAAM,aAAcC,GAAI,IAK3B,OACE,wBAAOV,UAAU,+BAAjB,UACE,mBAAGA,UAAU,2BAAb,SACE,cAAC,IAAD,CAAMW,GAAG,SAAT,qBAIF,qBAAIX,UAAU,YAAd,UAxBU,CACZ,CAACS,KAAM,SAAUG,YAAa,eAAgBC,SAAU,EAAGC,YAAa,OAAQJ,GAAI,GACpF,CAACD,KAAM,SAAUG,YAAa,eAAgBC,SAAU,EAAGC,YAAa,OAAQJ,GAAI,GACpF,CAACD,KAAM,SAAUG,YAAa,eAAgBC,SAAU,EAAGC,YAAa,OAAQJ,GAAI,GACpF,CAACD,KAAM,SAAUG,YAAa,eAAgBC,SAAU,EAAGC,YAAa,OAAQJ,GAAI,IAqBzEK,KAAI,SAAAC,GAAI,OACb,+BACA,cAAC,IAAD,CAAML,GAAG,QAAQX,UAZR,GAYmBgB,EAAKN,GAAiB,YAAc,GAAhE,SAAqEM,EAAKP,OAZjE,GAaRO,EAAKN,GACJ,+BACGF,EAAQO,KAAI,SAAAE,GAAM,OACjB,6BACE,cAAC,IAAD,CAAMN,GAAG,UAAT,SACGM,EAAOR,YAId,6BACE,eAAC,IAAD,CAAME,GAAG,cAAT,UACE,sBAAMX,UAAU,gBAAhB,SACE,cAAC,IAAD,CAAiBkB,KAAMC,QAEzB,sBAAMnB,UAAU,OAAhB,gCAIL,SAGL,6BACE,eAAC,IAAD,CAAMW,GAAG,YAAT,UACE,sBAAMX,UAAU,gBAAhB,SACE,cAAC,IAAD,CAAiBkB,KAAMC,QAEzB,sBAAMnB,UAAU,OAAhB,kCCpCGoB,EAzBD,WAOZ,OACE,qBAAKpB,UAAU,SAAf,SACE,qBAAKK,MAAM,4BAAX,SARU,CACZ,CAACI,KAAM,SAAUG,YAAa,cAAeC,SAAU,EAAGC,YAAa,OAAQJ,GAAI,GACnF,CAACD,KAAM,SAAUG,YAAa,cAAeC,SAAU,EAAGC,YAAa,OAAQJ,GAAI,GACnF,CAACD,KAAM,SAAUG,YAAa,cAAeC,SAAU,EAAGC,YAAa,OAAQJ,GAAI,GACnF,CAACD,KAAM,SAAUG,YAAa,cAAeC,SAAU,EAAGC,YAAa,OAAQJ,GAAI,IAKxEK,KAAI,SAAAC,GAAI,OACb,qBAAKhB,UAAU,WAAf,SACE,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,aAAb,SAA2BgB,EAAKP,OAChC,mBAAGT,UAAU,gBAAb,SAA8BgB,EAAKJ,cACnC,oDAAuBI,EAAKH,YAC5B,8CAAiBG,EAAKF,4BCqBrBO,EArCF,WACX,IAAML,EACE,SADFA,EAIS,OAUf,OACE,sBAAKhB,UAAU,SAAf,UACE,mBAAGA,UAAU,uBAAb,SAAqCgB,IACrC,oBAAGhB,UAAU,qBAAb,yBAA+CgB,KAC/C,qBAAKX,MAAM,4BAAX,SAVY,CACd,CAACI,KAAM,aAAcC,GAAI,EAAGY,MAAO,KAAMC,KAAM,UAAMC,SAAU,eAC/D,CAACf,KAAM,aAAcC,GAAI,EAAGY,MAAO,KAAMC,KAAM,UAAMC,SAAU,eAC/D,CAACf,KAAM,aAAcC,GAAI,EAAGY,MAAO,KAAMC,KAAM,UAAMC,SAAU,eAC/D,CAACf,KAAM,aAAcC,GAAI,EAAGY,MAAO,KAAMC,KAAM,UAAMC,SAAU,gBAOlDT,KAAI,SAAAE,GAAM,OACjB,qBAAKjB,UAAU,WAAf,SACE,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,aAAb,SAA2BiB,EAAOR,OAClC,mBAAGT,UAAU,gBAAb,SAA8BiB,EAAOO,WACrC,8BACE,uBAAMxB,UAAU,GAAhB,UAAoBiB,EAAOK,MAA3B,OACA,uBAAMtB,UAAU,GAAhB,UAAoBiB,EAAOM,KAA3B,wB,gBCZHE,EAAc,SAAAC,GAC1B,IAAIC,EAAW,IAAIC,KAAKF,GAAMG,UAC9B,GAAKF,EAAL,CACA,IACIG,EAAcH,EAAW,KADnB,IAAIC,MAAOC,UACuB,IACxCE,EAAM,CAETA,KAAW,OA0BZ,OAzBID,EAAa,EAChBC,EAAIC,KAAO,SACDF,GAAc,IACxBC,EAAIC,KAAO,SAGZF,EAAaG,KAAKC,IAAIJ,IAER,QAA0B,GACvCC,EAAII,WAAa,QACjBJ,EAAIL,KAAOO,KAAKG,MAAMN,EAAU,UACtBA,EAAU,OAAyB,GAC7CC,EAAII,WAAa,SACjBJ,EAAIL,KAAOO,KAAKG,MAAMN,EAAU,SACtBA,EAAU,MAAoB,GACxCC,EAAII,WAAa,OACjBJ,EAAIL,KAAOO,KAAKG,MAAMN,EAAU,QACtBA,EAAU,KAAe,GACnCC,EAAII,WAAa,QACjBJ,EAAIL,KAAOO,KAAKG,MAAMN,EAAU,QAEhCC,EAAII,WAAa,UACjBJ,EAAIL,KAAOO,KAAKG,MAAMN,IAGjB,GAAN,OAAUC,EAAIL,KAAd,YAAsBK,EAAII,WAA1B,YAAoD,QAAZJ,EAAIC,KAAkB,MAAQ,WC2BxDK,EAvEA,WAAO,IAAD,EACaC,oBAAS,GADtB,mBACZC,EADY,KACFC,EADE,KAoBbvB,EACE,aADFA,EAES,wEAFTA,EAGS,cAOTwB,EAAe,CACnB,CAAEnB,MAAO,MAAOoB,UAAW,eAC3B,CAAEpB,MAAO,MAAOoB,UAAW,eAC3B,CAAEpB,MAAO,MAAOoB,UAAW,eAC3B,CAAEpB,MAAO,MAAOoB,UAAW,eAC3B,CAAEpB,MAAO,MAAOoB,UAAW,gBAGvBC,EAASF,EAAa1B,KAAI,SAAA6B,GAAW,ODhCvBF,ECgCkCE,EAAYF,UD/BrD,IAAId,KAAKc,GACVG,eAAe,SAASC,MAAM,KAAK,GAF3B,IAAAJ,KCiCdK,EAAON,EAAa1B,KAAI,SAAA6B,GAAW,OAAIA,EAAYtB,SAEzD,OACE,sBAAKtB,UAAU,SAAf,UACE,mBAAGA,UAAU,uBAAb,SAAqCiB,IACrC,oBAAGjB,UAAU,qBAAb,0BAAgDyB,EAAYR,MAC5D,mBAAGjB,UAAU,qBAAb,SAAmCiB,IACnC,qBAAKjB,UAAU,WAAf,SACE,cAAC,IAAD,CAAM+C,KAAM,kBA5CE,SAACJ,EAAQI,GAAT,MAAmB,CACrCJ,SACAK,SAAU,CAAC,CACTC,MAAO,sBACPF,OACAG,MAAM,EACNC,YAAa,UACbC,QAAS,MAqCWC,CAAYV,EAAQI,IAAOO,QAjCnC,CACdC,UAAW,CACPC,SAAU,QAiCZ,sBAAKxD,UAAU,2CAAf,UACE,wBACEyD,QAAS,kBAAMjB,GAAY,IAC3BxC,UAAS,kCAA6BuC,GAAY,cAFpD,sBAKA,sBAAKvC,UAAU,UAAf,UACE,uBAAOK,MAAM,aAAb,mBACA,uBAAOJ,KAAK,OAAOD,UAAS,sBAAiBuC,GAAY,gBACzD,uBAAOlC,MAAM,aAAb,iBACA,uBAAOJ,KAAK,OAAOD,UAAS,sBAAiBuC,GAAY,gBACzD,wBACEkB,QAAS,kBAAMjB,GAAY,IAC3BxC,UAAS,wCAAmCuC,GAAY,cAF1D,6BCtCKmB,EAlBH,WACV,OACE,qBAAK1D,UAAU,iBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAU2D,OAAK,EAACC,KAAK,IAAIjD,GAAG,WAC5B,cAAC,IAAD,CAAOkD,KAAK,SAASC,UAAW1C,IAChC,cAAC,IAAD,CAAOyC,KAAK,QAAQC,UAAWzC,IAC/B,cAAC,IAAD,CAAOwC,KAAK,UAAUC,UAAWzB,IACjC,cAAC,IAAD,CAAOwB,KAAK,YAAYC,UAAW/D,IACnC,cAAC,IAAD,CAAO8D,KAAK,cAAcC,UAAWxD,aCXjDyD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,U","file":"static/js/main.85e79cd0.chunk.js","sourcesContent":["const AddRoom = () => {\n  \n  return (\n    <div className=\"column\">\n      <div className=\"card m-4 p-4\">\n        <div className=\"title is-3\">Add room</div>\n        <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <p className=\"control\">\n            <input className=\"input\" type=\"text\" placeholder=\"Room name\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <p className=\"control\">\n            <textarea className=\"textarea\" type=\"text\" placeholder=\"Room description\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Id</label>\n          <p className=\"control\">\n            <input className=\"input\" type=\"number\" min='1' step=\"1\" placeholder=\"Unique id\" />\n          </p>\n        </div>\n        <div class=\"field mt-4\">\n          <div class=\"control\">\n            <button class=\"button is-primary\">\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddRoom","const AddSensor = () => {\n  return (\n    <div className=\"column\">\n      <div className=\"card m-4 p-4\">\n        <div className=\"title is-3\">Add Sensor</div>\n        <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <p className=\"control\">\n            <input className=\"input\" type=\"text\" placeholder=\"Sensor name\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <p className=\"control\">\n            <textarea className=\"textarea\" type=\"text\" placeholder=\"Sensor description\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Variable</label>\n          <p className=\"control\">\n            <input className=\"input\" type=\"text\" placeholder=\"Ex: Temperature\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Unit</label>\n          <p className=\"control\">\n            <input className=\"input\" type=\"text\" placeholder=\"Ex: à¥°C\" />\n          </p>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Id</label>\n          <p className=\"control\">\n            <input className=\"input\" type=\"number\" min='1' step=\"1\" placeholder=\"Unique id\" />\n          </p>\n        </div>\n        <div class=\"field mt-4\">\n          <div class=\"control\">\n            <button class=\"button is-primary\">\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddSensor","import { \n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\n\nconst Navigator = () => {\n  const rooms = [\n    {name: \"Room 1\", description: \"Blan bla bla\", nsensors: 5, last_update: 123123, id: 0},\n    {name: \"Room 2\", description: \"Blan bla bla\", nsensors: 1, last_update: 123123, id: 1},\n    {name: \"Room 3\", description: \"Blan bla bla\", nsensors: 4, last_update: 123123, id: 2},\n    {name: \"Room 4\", description: \"Blan bla bla\", nsensors: 1, last_update: 123123, id: 3},\n  ]\n\n  const sensors = [\n    {name: \"Location 1\", id: 0},\n    {name: \"Location 2\", id: 1},\n    {name: \"Location 3\", id: 2},\n    {name: \"Location 4\", id: 3},\n    {name: \"Location 5\", id: 4},\n  ]\n\n  const selected = 2;\n  \n  return (\n    <aside className=\"menu column is-one-fifth m-4\">\n      <p className=\"menu-label has-text-link\">\n        <Link to='/rooms'>\n          Rooms\n        </Link>\n      </p>\n      <ul className=\"menu-list\">\n        {rooms.map(room => (\n          <li>\n          <Link to='/room' className={room.id == selected ? 'is-active' : ''}>{room.name}</Link>\n          {room.id == selected ? \n            <ul>\n              {sensors.map(sensor => (\n                <li>\n                  <Link to='/sensor'>\n                    {sensor.name}\n                  </Link>\n                </li> \n              ))}\n              <li>\n                <Link to='/add_sensor'>\n                  <span className=\"has-text-link\">\n                    <FontAwesomeIcon icon={faPlus} />\n                  </span>\n                  <span className=\"ml-2\">Add sensor</span>\n                </Link>\n              </li>\n            </ul>\n           : ''}\n          </li>\n        ))}\n        <li>\n          <Link to='/add_room'>\n            <span className=\"has-text-link\">\n              <FontAwesomeIcon icon={faPlus} />\n             </span>\n            <span className=\"ml-2\">Add room</span>\n          </Link>\n        </li>\n      </ul>\n    </aside>\n  )\n}\n\nexport default Navigator","const Rooms = () => {\n  const rooms = [\n    {name: \"Room 1\", description: \"Bla bla bla\", nsensors: 5, last_update: 123123, id: 0},\n    {name: \"Room 2\", description: \"Bla bla bla\", nsensors: 1, last_update: 123123, id: 1},\n    {name: \"Room 3\", description: \"Bla bla bla\", nsensors: 4, last_update: 123123, id: 2},\n    {name: \"Room 4\", description: \"Bla bla bla\", nsensors: 1, last_update: 123123, id: 3},\n  ]\n  return (\n    <div className=\"column\">\n      <div class=\"is-flex is-flex-wrap-wrap\">\n        {rooms.map(room => (\n          <div className=\"card m-4\">\n            <div className=\"card-content\">\n              <p className=\"title is-3\">{room.name}</p>\n              <p className=\"subtitle is-5\">{room.description}</p>\n              <p>Sensors connected: {room.nsensors}</p>\n              <p>Last update: {room.last_update}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Rooms","const Room = () => {\n  const room = {\n    name: \"Room 1\",\n    description: \"Bla bla bla\",\n    nsensors: 5,\n    last_update: 123123,\n    id: 0\n  }\n\n  const sensors = [\n    {name: \"Location 1\", id: 0, value: 12.3, unit: 'à¥°C', variable: 'Temperature' },\n    {name: \"Location 1\", id: 1, value: 12.3, unit: 'à¥°C', variable: 'Temperature' },\n    {name: \"Location 1\", id: 2, value: 12.3, unit: 'à¥°C', variable: 'Temperature' },\n    {name: \"Location 1\", id: 3, value: 12.3, unit: 'à¥°C', variable: 'Temperature' },\n  ]\n  return (\n    <div className=\"column\">\n      <p className=\"title is-3 mt-4 ml-2\">{room.name}</p>\n      <p className=\"subtitle is-5 ml-4\">Updated at: {room.last_update}</p>\n      <div class=\"is-flex is-flex-wrap-wrap\">\n        {sensors.map(sensor => (\n          <div className=\"card m-4\">\n            <div className=\"card-content\">\n              <p className=\"title is-3\">{sensor.name}</p>\n              <p className=\"subtitle is-5\">{sensor.variable}</p>\n              <p>\n                <span className=\"\">{sensor.value} </span>\n                <span className=\"\">{sensor.unit} </span>\n              </p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Room","export const toDateTime = timestamp => {\n  const time = new Date(timestamp)\n  return time.toLocaleString('sv-SE')\n}\n\nexport const toDate = timestamp => {\n  const time = new Date(timestamp)\n  return time.toLocaleString('sv-SE').split(' ')[0]\n}\n\nexport const toTime = timestamp => {\n  const time = new Date(timestamp)\n  return time.toLocaleString('sv-SE').split(' ')[1]\n}\n\nexport const timeFromNow = time => {\n\tlet unixTime = new Date(time).getTime();\n\tif (!unixTime) return;\n\tlet now = new Date().getTime();\n\tlet difference = (unixTime / 1000) - (now / 1000);\n\tlet tfn = {};\n\n  tfn.when = 'now';\n\tif (difference > 0) {\n\t\ttfn.when = 'future';\n\t} else if (difference < -1) {\n\t\ttfn.when = 'past';\n\t}\n\n\tdifference = Math.abs(difference);\n\n\tif (difference / (60 * 60 * 24 * 365) > 1) {\n\t\ttfn.unitOfTime = 'years';\n\t\ttfn.time = Math.floor(difference / (60 * 60 * 24 * 365));\n\t} else if (difference / (60 * 60 * 24 * 45) > 1) {\n\t\ttfn.unitOfTime = 'months';\n\t\ttfn.time = Math.floor(difference / (60 * 60 * 24 * 45));\n\t} else if (difference / (60 * 60 * 24) > 1) {\n\t\ttfn.unitOfTime = 'days';\n\t\ttfn.time = Math.floor(difference / (60 * 60 * 24));\n\t} else if (difference / (60 * 60) > 1) {\n\t\ttfn.unitOfTime = 'hours';\n\t\ttfn.time = Math.floor(difference / (60 * 60));\n\t} else {\n\t\ttfn.unitOfTime = 'seconds';\n\t\ttfn.time = Math.floor(difference);\n\t}\n\n\treturn `${tfn.time} ${tfn.unitOfTime} ${tfn.when == 'past' ?  'ago' : 'ahead'}` ;\n}","import { useState } from 'react';\nimport { Line } from 'react-chartjs-2'\nimport { timeFromNow, toDateTime, toTime } from '../js/helpers';\n\nconst Sensor = () => {\n  const [realtime, setRealtime] = useState(true);\n\n  const initialData = (labels, data) => ({\n    labels,\n    datasets: [{\n      label: 'Temperature à¥°C',\n      data,\n      fill: false,\n      borderColor: '#2ecc71',\n      tension: 0.1\n    }]\n  });\n\n  const options = {\n    animation: {\n        duration: 0\n    }\n  }\n\n  const sensor = {\n    name: \"Location 1\",\n    description: \"Measurements the temperature in the corner, should update every 5 min\",\n    last_update: 1627839691742,\n    variable: 'Temperature',\n    unit: 'à¥°C',\n    id: 1,\n    room_id: 1,\n  }\n\n  const measurements = [\n    { value: 18.19, timestamp: 1627859796566 },\n    { value: 19.19, timestamp: 1627860796566 },\n    { value: 20.19, timestamp: 1627867796566 },\n    { value: 15.19, timestamp: 1627959796566 },\n    { value: 14.19, timestamp: 1628859796566 },\n  ]\n\n  const labels = measurements.map(measurement => toTime(measurement.timestamp))\n  const data = measurements.map(measurement => measurement.value)\n\n  return (\n    <div className=\"column\">\n      <p className=\"title is-3 mt-4 ml-2\">{sensor.name}</p>\n      <p className=\"subtitle is-5 ml-3\">Last update: {timeFromNow(sensor.last_update)}</p>\n      <p className=\"subtitle is-5 ml-3\">{sensor.description}</p>\n      <div className=\"card m-4\">\n        <Line data={() => initialData(labels, data)} options={options}/>\n      </div>\n      <div className=\"is-flex is-justify-content-space-between\">\n        <button\n          onClick={() => setRealtime(true)}\n          className={`button is-outlined ml-4 ${realtime && 'is-success'}`}>\n            Realtime\n        </button>\n        <div className=\"is-flex\">\n          <label class=\"label ml-4\">From:</label>\n          <input type=\"date\" className={`input ml-2 ${!realtime && 'is-success'}`} />\n          <label class=\"label ml-4\">To:</label>\n          <input type=\"date\" className={`input ml-2 ${!realtime && 'is-success'}`} />\n          <button \n            onClick={() => setRealtime(false)}\n            className={`button is-outlined ml-4 mr-4 ${!realtime && 'is-success'}`}>\n              Query\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sensor","import { Switch, Redirect, Route } from 'react-router-dom';\nimport AddRoom from \"./AddRoom\";\nimport AddSensor from \"./AddSensor\";\nimport Navigator from \"./Navigator\";\nimport Rooms from \"./Rooms\";\nimport Room from \"./Room\";\nimport Sensor from \"./Sensor\";\n\nconst App = () => {\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"columns\">\n        <Navigator />\n        <Switch>\n            <Redirect exact from=\"/\" to=\"/rooms\" />\n            <Route path=\"/rooms\" component={Rooms} />\n            <Route path=\"/room\" component={Room} />\n            <Route path=\"/sensor\" component={Sensor} />\n            <Route path=\"/add_room\" component={AddRoom} />\n            <Route path=\"/add_sensor\" component={AddSensor} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './css/index.css';\nimport './css/style.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}